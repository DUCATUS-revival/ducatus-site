name: Features Trigger Manually
on:
  workflow_dispatch:
    inputs:
      version:
        description: Node Version
        default: 12
        required: true
      deploy:
        description: Deploy to test server
        default: true
        required: false
      deploy_type:
        description: Type deploy first/second
        default: 'first'
        required: false
jobs:
  build:
    name: Build project
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache node packages
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Setup node ${{ github.event.inputs.version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ github.event.inputs.version }}
      - name: Install project packages
        run: npm install
      - name: Build project to production
        run: npm run build:prod
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ducatus-dist
          path: ./dist
          retention-days: 2
  deploy:
    if: ${{ github.event.inputs.deploy == 'true' }}
    name: Deploy project to test server
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts from build
        uses: actions/download-artifact@v2
        with:
          name: ducatus-dist
      - name: ls
        run: ls
      - if: ${{ github.event.inputs.deploy_type == 'first' }}
        name: Deploying to server
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: ${{ secrets.DEPLOY_TEST_SWITCHES }}
          path: ${{ secrets.DEPLOY_TEST_PATH }}
          remote_path: ${{ secrets.DEPLOY_TEST_REMOTE_PATH }}
          remote_host: ${{ secrets.DEPLOY_TEST_HOST }}
          remote_port: ${{ secrets.DEPLOY_TEST_PORT }}
          remote_user: ${{ secrets.DEPLOY_TEST_USER }}
          remote_key: ${{ secrets.DEPLOY_TEST_KEY }}
      - if: ${{ github.event.inputs.deploy_type == 'second' }}
        name: Deploy to sandbox via rsync
        uses: trendyminds/github-actions-rsync@master
        with:
          RSYNC_OPTIONS: ${{ secrets.DEPLOY_TEST_SWITCHES }}
          RSYNC_TARGET: ${{ secrets.DEPLOY_TEST_REMOTE_PATH }}
          RSYNC_SOURCE: ${{ secrets.DEPLOY_TEST_PATH }}
        env:
          SSH_PRIVATE_KEY: ${{ secrets.DEPLOY_TEST_KEY }}
          SSH_USERNAME: ${{ secrets.DEPLOY_TEST_USER }}
          SSH_HOSTNAME: ${{ secrets.DEPLOY_TEST_HOST }}
